{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["MyVerticallyCenteredModal","props","Modal","size","aria-labelledby","centered","Body","className","src","scrolling","width","height","frameBorder","marginHeight","marginWidth","Footer","onClick","onHide","App","useState","view","setView","ul","setUl","modalShow","setModalShow","href","rel","id","style","display","target","show","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0RAsHA,SAASA,EAA0BC,GAClC,OACC,kBAACC,EAAA,EAAD,iBACKD,EADL,CAECE,KAAK,KACLC,kBAAgB,gCAChBC,UAAQ,IAGR,kBAACH,EAAA,EAAMI,KAAP,CAAYC,UAAU,cACrB,4BACCC,IAAI,oHACJC,UAAU,KACVF,UAAU,qBACVG,MAAM,MACNC,OAAO,MACPC,YAAY,IACZC,aAAa,IACbC,YAAY,KARb,kBAcD,kBAACZ,EAAA,EAAMa,OAAP,KACC,uBAAGC,QAASf,EAAMgB,QAAlB,WAOWC,MAxIf,WAAgB,IAAD,EACUC,oBAAS,GADnB,mBACPC,EADO,KACDC,EADC,OAEMF,oBAAS,GAFf,mBAEPG,EAFO,KAEHC,EAFG,OAGoBJ,oBAAS,GAH7B,mBAGPK,EAHO,KAGIC,EAHJ,KAMd,OACC,kBAAC,IAAD,KAEEL,EACA,yBAAKb,UAAU,UACd,uBAAGA,UAAU,QAAb,YAGA,uBACCA,UAAU,YACVmB,KAAK,IACLC,IAAI,sBACJX,QAAS,kBAAMK,GAAQ,KAJxB,UAUA,yBAAKd,UAAU,UACd,yBAAKA,UAAU,WACd,yBAAKqB,GAAG,UACP,wCACA,yBAAKA,GAAG,kBAGT,uBAAGrB,UAAU,mBAAmBmB,KAAK,8BAArC,YAIA,uBAAGV,QAAS,kBAAMO,GAAOD,IAAKf,UAAU,kBAAkBmB,KAAK,KAA/D,UAIA,wBAAIG,MAAO,CAAEC,QAASR,EAAK,QAAU,SACpC,4BAAI,uBAAGf,UAAU,YAAYwB,OAAO,SAASL,KAAK,+BAA9C,WACJ,4BAAI,uBAAGnB,UAAU,YAAYwB,OAAO,SAASL,KAAK,yCAA9C,aACJ,4BAAI,uBAAGnB,UAAU,YAAYwB,OAAO,SAASL,KAAK,iCAA9C,YACJ,4BAAI,uBAAGnB,UAAU,YAAYwB,OAAO,SAASL,KAAK,0CAA9C,cAKL,uBAAGA,KAAK,IAAInB,UAAU,UAAUS,QAAS,kBAAMS,GAAa,KAA5D,WACA,kBAACzB,EAAD,CACCgC,KAAMR,EACNP,OAAQ,kBAAMQ,GAAa,MAE5B,uBACClB,UAAU,oBACVS,QAAS,kBAAMK,EAAQD,EAAO,IAC9BM,KAAK,KAHN,SASD,yBAAKnB,UAAU,QACd,yBAAKA,UAAU,OACd,yBAAKA,UAAU,gBACd,yBAAKA,UAAU,kBAAkBC,IAAI,wBAEtC,yBAAKD,UAAU,gBACd,yBAAKA,UAAU,kBAAkBC,IAAI,2BAEtC,yBAAKD,UAAU,gBACd,yBAAKA,UAAU,kBAAkBC,IAAI,uBAGvC,yBAAKD,UAAU,OACd,yBAAKA,UAAU,gBACd,yBAAKA,UAAU,kBAAkBC,IAAI,0BAEtC,yBAAKD,UAAU,gBACd,yBAAKA,UAAU,kBAAkBC,IAAI,gCAEtC,yBAAKD,UAAU,gBACd,yBAAKA,UAAU,kBAAkBC,IAAI,0BAGvC,yBAAKD,UAAU,OACd,yBAAKA,UAAU,gBACd,yBAAKA,UAAU,kBAAkBC,IAAI,uBAEtC,yBAAKD,UAAU,gBACd,yBAAKA,UAAU,kBAAkBC,IAAI,0BAEtC,yBAAKD,UAAU,gBACd,yBAAKA,UAAU,kBAAkBC,IAAI,qBC/F1ByB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.df1fb71b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { findDOMNode } from \"react-dom\";\nimport {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute,\n\tLink\n} from \"react-router-dom\";\n\nimport Modal from 'react-bootstrap/Modal'\nimport './App.css';\n\n\n\nfunction App() {\n\tconst [view, setView] = useState(true);\n\tconst [ul, setUl] = useState(false);\n\tconst [modalShow, setModalShow] = useState(false);\n\n\n\treturn (\n\t\t<Router>\n\n\t\t\t{view ? (\n\t\t\t\t<div className=\"view-1\">\n\t\t\t\t\t<p className=\"name\">\n\t\t\t\t\t\tIan Rios\n\t\t\t\t</p>\n\t\t\t\t\t<a\n\t\t\t\t\t\tclassName=\"open-link\"\n\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\tonClick={() => setView(false)}\n\t\t\t\t\t>\n\t\t\t\t\t\tenter\n\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t\t<div className=\"view-2\">\n\t\t\t\t\t\t<div className=\"sidebar\">\n\t\t\t\t\t\t\t<div id=\"header\">\n\t\t\t\t\t\t\t\t<h1>Ian Rios</h1>\n\t\t\t\t\t\t\t\t<div id=\"expandButton\"></div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<a className=\"h2-size first-h2\" href=\"https://github.com/ianrios\">\n\t\t\t\t\t\t\t\tprojects\n\t\t\t\t\t\t\t\t</a>\n\n\t\t\t\t\t\t\t<a onClick={() => setUl(!ul)} className=\"h2-size ul-show\" href=\"#\">\n\t\t\t\t\t\t\t\tsocial\n\t\t\t\t\t\t\t</a>\n\n\t\t\t\t\t\t\t<ul style={{ display: ul ? \"block\" : \"none\" }}>\n\t\t\t\t\t\t\t\t<li><a className=\"flat-link\" target=\"_blank\" href=\"https://github.com/ianrios/\">github</a></li>\n\t\t\t\t\t\t\t\t<li><a className=\"flat-link\" target=\"_blank\" href=\"https://www.linkedin.com/in/ian-rios/\">linkedin</a></li>\n\t\t\t\t\t\t\t\t<li><a className=\"flat-link\" target=\"_blank\" href=\"https://twitter.com/ian_rios_\">twitter</a></li>\n\t\t\t\t\t\t\t\t<li><a className=\"flat-link\" target=\"_blank\" href=\"https://www.codewars.com/users/ianrios\">codewars</a></li>\n\t\t\t\t\t\t\t</ul>\n\n\n\n\t\t\t\t\t\t\t<a href=\"#\" className=\"h2-size\" onClick={() => setModalShow(true)}>contact</a>\n\t\t\t\t\t\t\t<MyVerticallyCenteredModal\n\t\t\t\t\t\t\t\tshow={modalShow}\n\t\t\t\t\t\t\t\tonHide={() => setModalShow(false)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\tclassName=\"h2-size back-link\"\n\t\t\t\t\t\t\t\tonClick={() => setView(view - 1)}\n\t\t\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tback\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"grid\">\n\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t<div className=\"col img-wrap\">\n\t\t\t\t\t\t\t\t\t<img className=\"img-fluid img-t\" src=\"img/bandreader.png\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"col img-wrap\">\n\t\t\t\t\t\t\t\t\t<img className=\"img-fluid img-t\" src=\"img/borilliant_fb.png\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"col img-wrap\">\n\t\t\t\t\t\t\t\t\t<img className=\"img-fluid img-t\" src=\"img/recorder.png\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t<div className=\"col img-wrap\">\n\t\t\t\t\t\t\t\t\t<img className=\"img-fluid img-t\" src=\"img/fallingnotes.png\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"col img-wrap\">\n\t\t\t\t\t\t\t\t\t<img className=\"img-fluid img-t\" src=\"img/interface_JS_42218.png\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"col img-wrap\">\n\t\t\t\t\t\t\t\t\t<img className=\"img-fluid img-t\" src=\"img/midireceive.png\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t<div className=\"col img-wrap\">\n\t\t\t\t\t\t\t\t\t<img className=\"img-fluid img-t\" src=\"img/momsearch.png\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"col img-wrap\">\n\t\t\t\t\t\t\t\t\t<img className=\"img-fluid img-t\" src=\"img/score_reader.png\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"col img-wrap\">\n\t\t\t\t\t\t\t\t\t<img className=\"img-fluid img-t\" src=\"img/V1.png\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t</Router >\n\t);\n}\n\nfunction MyVerticallyCenteredModal(props) {\n\treturn (\n\t\t<Modal\n\t\t\t{...props}\n\t\t\tsize=\"lg\"\n\t\t\taria-labelledby=\"contained-modal-title-vcenter\"\n\t\t\tcentered\n\t\t>\n\n\t\t\t<Modal.Body className=\"modal-body\">\n\t\t\t\t<iframe\n\t\t\t\t\tsrc=\"https://docs.google.com/forms/d/e/1FAIpQLSdZuZHU8gkftr7wgn5DF2nYYG8Ds4HCDp-Vh-_OfYIE-YoBwQ/viewform?embedded=true\"\n\t\t\t\t\tscrolling=\"no\"\n\t\t\t\t\tclassName=\"iframe-google-form\"\n\t\t\t\t\twidth=\"640\"\n\t\t\t\t\theight=\"979\"\n\t\t\t\t\tframeBorder=\"0\"\n\t\t\t\t\tmarginHeight=\"0\"\n\t\t\t\t\tmarginWidth=\"0\"\n\t\t\t\t>\n\t\t\t\t\tLoadingâ€¦\n\t\t\t\t</iframe>\n\n\t\t\t</Modal.Body>\n\t\t\t<Modal.Footer>\n\t\t\t\t<a onClick={props.onHide}>Close</a>\n\t\t\t</Modal.Footer>\n\t\t</Modal>\n\t);\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}